// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=out100);
    Mux(a=c[0], b=d[0], sel=sel[0], out=out101);
    Mux(a=out100, b=out101, sel=sel[1], out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel[0], out=out102);
    Mux(a=c[1], b=d[1], sel=sel[0], out=out103);
    Mux(a=out102, b=out103, sel=sel[1], out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=out104);
    Mux(a=c[2], b=d[2], sel=sel[0], out=out105);
    Mux(a=out104, b=out105, sel=sel[1], out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=out106);
    Mux(a=c[3], b=d[3], sel=sel[0], out=out107);
    Mux(a=out106, b=out107, sel=sel[1], out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=out108);
    Mux(a=c[4], b=d[4], sel=sel[0], out=out109);
    Mux(a=out108, b=out109, sel=sel[1], out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=out110);
    Mux(a=c[5], b=d[5], sel=sel[0], out=out111);
    Mux(a=out110, b=out111, sel=sel[1], out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=out112);
    Mux(a=c[6], b=d[6], sel=sel[0], out=out113);
    Mux(a=out112, b=out113, sel=sel[1], out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=out114);
    Mux(a=c[7], b=d[7], sel=sel[0], out=out115);
    Mux(a=out114, b=out115, sel=sel[1], out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=out116);
    Mux(a=c[8], b=d[8], sel=sel[0], out=out117);
    Mux(a=out116, b=out117, sel=sel[1], out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=out118);
    Mux(a=c[9], b=d[9], sel=sel[0], out=out119);
    Mux(a=out118, b=out119, sel=sel[1], out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=out120);
    Mux(a=c[10], b=d[10], sel=sel[0], out=out121);
    Mux(a=out120, b=out121, sel=sel[1], out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=out122);
    Mux(a=c[11], b=d[11], sel=sel[0], out=out123);
    Mux(a=out122, b=out123, sel=sel[1], out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=out124);
    Mux(a=c[12], b=d[12], sel=sel[0], out=out125);
    Mux(a=out124, b=out125, sel=sel[1], out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=out126);
    Mux(a=c[13], b=d[13], sel=sel[0], out=out127);
    Mux(a=out126, b=out127, sel=sel[1], out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=out128);
    Mux(a=c[14], b=d[14], sel=sel[0], out=out129);
    Mux(a=out128, b=out129, sel=sel[1], out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=out130);
    Mux(a=c[15], b=d[15], sel=sel[0], out=out131);
    Mux(a=out130, b=out131, sel=sel[1], out=out[15]);
}